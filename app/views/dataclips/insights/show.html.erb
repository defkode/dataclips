<% content_for :title, @insight.name  %>
<div id='<%= dom_id(@insight) %>'></div>

<script type="text/javascript">
  window.fetchData = function(url, table) {
    fetch(url).then(function(response) {
      return response.json()
    }).then(function(data) {
      console.log(data);
      var records = data.map(function(i){
        record = JSON.parse(i.record)
        return record;
      })
      table.addData(records);
    });
  }

  window.fetchInBatches = function(page = 1, url, table) {
    fetch(url + '?page=' + page).then(function(response) {
      return response.json()
    }).then(function(data) {
      var currentPage = data[0].page
      var total_count = data[0].total_count
      var total_pages = parseInt(data[0].total_pages, 10)

      var records = data.map(function(i){
        record = JSON.parse(i.record)
        return record;
      })
      table.addData(records);
      if (currentPage < total_pages) {
        fetchInBatches(currentPage + 1, url, table);
      }
    });
  }
</script>

<script>
  var config = {
    url:     '<%= dataclips.insight_path(@insight) %>',
    domId:   '<%= dom_id(@insight) %>',
    perPage: <%= @insight.per_page.to_json %>
  };
</script>
<script>

  var calculateAvailableWidth = function(){
    var container = document.getElementById(config.domId);
    return container.clientWidth
  };

  var table = Reactable.init({
    htmlId:   config.domId,
    schema:   <%= raw File.read("#{Rails.root}/app/dataclips/#{@insight.clip_id}.js") %>,
    limit:    15
  });

  table.updateTableWidth(calculateAvailableWidth());
  table.render();

  if (config.perPage) {
    fetchInBatches(1, config.url, table);
  } else {
    fetchData(config.url, table);
  }

  window.addEventListener('resize', function(){
    table.updateTableWidth(calculateAvailableWidth());
  });

</script>
